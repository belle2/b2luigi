stages:
  # - prepare-pipeline
  - test

variables:
  PYTHON_VERSION: "3.7"
  ARTIFACTS_PATH: "junit/test-results.xml"
  GITLAB_BELLE2_TOOLS_B2SETUP: "/cvmfs/belle.cern.ch/tools/b2setup"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push' && ($CI_COMMIT_BRANCH == 'main') && $CI_COMMIT_TITLE =~ /Merge branch.*/
    - if: $GITLAB_FORCE_RUNNING_PIPELINE == 'yes'

default:
  image: ubuntu:latest # possibly use basf2 image
  tags:
    - extagent48
  # cache:
  #   key: $CI_COMMIT_REF_SLUG
  #   paths:
  #     - target_head_hash.txt
  before_script:
    # If this is not the first stage: merge the HEAD of the target branch
    # - |
    #   if [ "${CI_PIPELINE_SOURCE}" == "merge_request_event" ]; then
    #     if [ "${GITLAB_IS_FIRST_STAGE}" != "yes" ]; then
    #         echo "Merging the branch ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME} up to commit $(< target_head_hash.txt) into this branch"
    #         git fetch --all && git merge $(< target_head_hash.txt) --strategy-option ours --no-commit --allow-unrelated-histories
    #     fi
    #   fi
    - apt-get update -qy
    - apt-get install -y git
    - apt-get install -y python3.7
    - python3 -m pip install --upgrade pip
    - source ${GITLAB_BELLE2_TOOLS_B2SETUP}
    - b2setup $(b2help-releases)

test:
  stage: test
  script:
    - pip install -U --user wheel setuptools
    - pip uninstall b2luigi
    - pip install -U --user pytest pytest-cov python-coveralls flit pre-commit
    - flit install -s
    - pre-commit run --all-files
    - rm -rf .coverage.*
    - pytest -v --cov b2luigi --junitxml=$ARTIFACTS_PATH --cov-report=xml tests

  artifacts:
    reports:
      junit: $ARTIFACTS_PATH
    paths:
      - $ARTIFACTS_PATH