stages:
  # - prepare-pipeline
  - test
  - docs

variables:
  FLIT_ROOT_INSTALL: "1"
  PYTHON_VERSION: "3.8.8"
  ARTIFACTS_TEST_PATH: "junit/test-results.xml"
  ARTIFACTS_DOCS_PATH: "docs-build/"
  GITLAB_BELLE2_TOOLS_B2SETUP: "/cvmfs/belle.cern.ch/tools/b2setup"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push' && ($CI_COMMIT_BRANCH == 'main') && $CI_COMMIT_TITLE =~ /Merge branch.*/
    - if: $GITLAB_FORCE_RUNNING_PIPELINE == 'yes'

default:
  image: belle2/externals-ubuntu2004:v01-12-01
  tags:
    - extagent48
  before_script:
    # Preliminary operations with Git
    - git config user.email "something@something.com"
    - git config user.name "someone"
    - git config --global --add safe.directory $(dirname ${GITLAB_BELLE2_TOOLS_B2SETUP})
    # setup of basf2
    - source ${GITLAB_BELLE2_TOOLS_B2SETUP}
    - b2setup $(b2help-releases)

test:
  stage: test
  script:
    - pip install -U --user wheel setuptools pytest pytest-cov python-coveralls flit pre-commit
    - export PATH=$PATH:~/.local/bin
    - flit install -s
    - pre-commit run --all-files
    - rm -rf .coverage.*
    - pytest -v --cov b2luigi --junitxml=$ARTIFACTS_TEST_PATH --cov-report=xml tests
  artifacts:
    reports:
      junit: $ARTIFACTS_TEST_PATH
    paths:
      - $ARTIFACTS_TEST_PATH

docs:
  stage: docs
  script:
    - pip install -U --user flit
    - export PATH=$PATH:~/.local/bin
    - flit install -s
    - sphinx-build docs/ $ARTIFACTS_DOCS_PATH
  artifacts:
    paths:
      - $ARTIFACTS_DOCS_PATH
    expire_in: 1 week
    expose_as: 'sphinx documentation'
    when: on_success
