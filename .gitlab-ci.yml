stages:
  - pre_commit
  - test
  - docs
  - publish

variables:
  FLIT_ROOT_INSTALL: "1"
  PYTHON_VERSION: "3.8.8"
  ARTIFACTS_TEST_PATH: "junit/test-results.xml"
  ARTIFACTS_DOCS_PATH: "docs-build"
  ARTIFACTS_COV_PATH: "coverage/"
  GITLAB_BELLE2_TOOLS_B2SETUP: "/cvmfs/belle.cern.ch/tools/b2setup"
  FLIT_INDEX_URL: "https://upload.pypi.org/legacy/"
  FLIT_USERNAME: __token__
  BASF2_RELEASE_VERSION: "light-2409-toyger"

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push' && ($CI_COMMIT_BRANCH == 'main') && $CI_COMMIT_TITLE =~ /Merge branch.*/
    - if: $CI_COMMIT_TAG
    - if: $GITLAB_FORCE_RUNNING_PIPELINE == 'yes'

default:
  image: belle2/belle2-base-el9:latest
  tags:
    - extagent48
  before_script:
    # Preliminary operations with Git
    - git config user.email "something@something.com"
    - git config user.name "someone"
    - git config --global --add safe.directory $(dirname ${GITLAB_BELLE2_TOOLS_B2SETUP})
    # Setup of basf2
    - source ${GITLAB_BELLE2_TOOLS_B2SETUP}
    - echo ${BASF2_RELEASE_VERSION}
    - b2venv ${BASF2_RELEASE_VERSION}
    - source venv/bin/activate

pre_commit:
  stage: pre_commit
  script:
    - pip install pre-commit
    - pre-commit run --all-files

test:
  stage: test
  script:
    - pip install pytest pytest-cov python-coveralls flit
    - flit install -s
    - pytest -v --cov b2luigi --junitxml=$ARTIFACTS_TEST_PATH --cov-report=xml --cov-report=html --cov-report=term tests
    - mv htmlcov $ARTIFACTS_COV_PATH
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  parallel:
    matrix:
      - BASF2_RELEASE_VERSION: [$BASF2_PYTHON38_RELEASE, $BASF2_PYTHON311_RELEASE]
  artifacts:
    reports:
      junit: $ARTIFACTS_TEST_PATH
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - junit/test-results.xml
      - coverage/
    expose_as: 'test result and coverage'

docs:
  stage: docs
  needs:
    - job: test
      artifacts: false
  script:
    - pip install flit
    - flit install -s
    - sphinx-build docs/ $ARTIFACTS_DOCS_PATH
  artifacts:
    paths:
      - docs-build/
    expire_in: 1 week
    expose_as: 'sphinx documentation'
    when: on_success

publish:
  stage: publish
  needs:
    - job: test
      artifacts: false
    - job: docs
      artifacts: false
  script:
    - pip install setuptools wheel twine flit
    - flit publish
  only:
    - tags
